--CREATE USER "SHIFT101" PASSWORD 'password';
--CREATE ROLE "APPLICATION";
--GRANT APPLICATION TO "SHIFT101";


CREATE TABLE CALENDAR
( 
CAL_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
CAL_MONTH INTEGER,
CAL_YEAR INTEGER,
CAL_LASTUPDATED TIMESTAMP,
CAL_LASTUPDATEDBY VARCHAR(20)
);

--grant ALL PRIVILEGES on CALENDAR to SHIFT101;

CREATE TABLE ATTENDANCE
( 
ATT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
ATT_DATE DATE,
ATT_EMP_ID INTEGER,
ATT_PUNCHTIME DECIMAL(4,2),
ATT_CALENDAR_ID INTEGER,
ATT_LASTUPDATED TIMESTAMP,
ATT_LASTUPDATEDBY VARCHAR(20)
);
--INSERT INTO "PUBLIC"."ATTENDANCE"("ATT_DATE", "ATT_EMP_ID", "ATT_PUNCHTIME", "ATT_LASTUPDATED", "ATT_LASTUPDATEDBY" ) VALUES ( CURRENT_DATE, 101990,10.24 , CURRENT_TIMESTAMP, 'ADMIN');

CREATE TABLE STATIC_DATA
( 
STAT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
STAT_NAME VARCHAR(20),
STAT_VALUE VARCHAR(20) ,
STAT_LASTUPDATED TIMESTAMP,
STAT_LASTUPDATEDBY VARCHAR(20)
);
--INSERT INTO "PUBLIC"."STATIC_DATA" ( "STAT_NAME", "STAT_VALUE", "STAT_LASTUPDATED", "STAT_LASTUPDATEDBY" ) VALUES (  'SHIFT_MIN_THRESHOLD', '6', CURRENT_TIMESTAMP, 'ADMIN');

CREATE TABLE SHIFTS
( 
SHIFT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
SHIFT_NAME VARCHAR(10),
SHIFT_START VARCHAR(4),
SHIFT_END VARCHAR(4),
SHIFT_TIMEZONE VARCHAR(3),
SHIFT_LASTUPDATED TIMESTAMP,
SHIFT_LASTUPDATEDBY VARCHAR(20)
);

--grant ALL PRIVILEGES on SHIFTS to SHIFT101;

INSERT INTO SHIFTS(SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE,SHIFT_LASTUPDATED,SHIFT_LASTUPDATEDBY) VALUES('General','0800','1630','IST',CURRENT_TIMESTAMP,'ADMIN');
INSERT INTO SHIFTS(SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE,SHIFT_LASTUPDATED,SHIFT_LASTUPDATEDBY) VALUES('UK','1430','2230','IST',CURRENT_TIMESTAMP,'ADMIN');
INSERT INTO SHIFTS(SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE,SHIFT_LASTUPDATED,SHIFT_LASTUPDATEDBY) VALUES('Morning','0630','1430','IST',CURRENT_TIMESTAMP,'ADMIN');
INSERT INTO SHIFTS(SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE,SHIFT_LASTUPDATED,SHIFT_LASTUPDATEDBY) VALUES('Night','2230','0630','IST',CURRENT_TIMESTAMP,'ADMIN');



CREATE TABLE ROLES
( 
ROLE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
ROLE_ROLETYPE VARCHAR(25),
ROLE_LASTUPDATED TIMESTAMP,
ROLE_LASTUPDATEDBY VARCHAR(20)
);
--grant ALL PRIVILEGES on ROLES to SHIFT101;
INSERT INTO ROLES( ROLE_ROLETYPE, ROLE_LASTUPDATED, ROLE_LASTUPDATEDBY ) VALUES ('Administrator',CURRENT_TIMESTAMP , 'ADMIN');
INSERT INTO ROLES( ROLE_ROLETYPE, ROLE_LASTUPDATED, ROLE_LASTUPDATEDBY ) VALUES ('User',CURRENT_TIMESTAMP , 'ADMIN');
INSERT INTO ROLES( ROLE_ROLETYPE, ROLE_LASTUPDATED, ROLE_LASTUPDATEDBY ) VALUES ('LineManager',CURRENT_TIMESTAMP , 'ADMIN');
INSERT INTO ROLES( ROLE_ROLETYPE, ROLE_LASTUPDATED, ROLE_LASTUPDATEDBY ) VALUES ('Reconcile',CURRENT_TIMESTAMP , 'ADMIN');

CREATE TABLE DEPARTMENT
( 
DEPT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
DEPT_NAME VARCHAR(50),
DEPT_LASTUPDATED TIMESTAMP,
DEPT_LASTUPDATEDBY VARCHAR(20)
);
--INSERT INTO "PUBLIC"."DEPARTMENT" ( "DEPT_ID", "DEPT_NAME", "DEPT_LASTUPDATED", "DEPT_LASTUPDATEDBY" ) VALUES ( 1, 'Production Support',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO "PUBLIC"."DEPARTMENT" ( "DEPT_ID", "DEPT_NAME", "DEPT_LASTUPDATED", "DEPT_LASTUPDATEDBY" ) VALUES ( 2, 'Development',CURRENT_TIMESTAMP , 'ADMIN');

CREATE TABLE USERDATA
( 
USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
USER_NAME VARCHAR(50),
USER_ROLE_ID INTEGER,
USER_EMP_ID INTEGER,
USER_MANAGER_ID INTEGER,
USER_DEPT_ID INTEGER,
USER_IS_ACTIVE CHAR(1),
USER_LASTUPDATED TIMESTAMP,
USER_LASTUPDATEDBY VARCHAR(20)
);
ALTER TABLE PUBLIC.USERDATA ADD FOREIGN KEY (USER_ROLE_ID) REFERENCES PUBLIC.ROLES(ROLE_ID);
ALTER TABLE PUBLIC.USERDATA ADD FOREIGN KEY (USER_DEPT_ID) REFERENCES PUBLIC.DEPARTMENT(DEPT_ID);
--grant ALL PRIVILEGES on USERDATA to SHIFT101;
--INSERT INTO USERDATA( USER_NAME, USER_LASTUPDATED, USER_LASTUPDATEDBY,USER_ROLE_ID,DEPARTMENT_ID,IS_ACTIVE ) VALUES ('Ashwal Thukral',CURRENT_TIMESTAMP , 'ADMIN',5,1,'Y');
--INSERT INTO USERDATA( USER_NAME, USER_LASTUPDATED, USER_LASTUPDATEDBY,USER_ROLE_ID,DEPARTMENT_ID,IS_ACTIVE ) VALUES ('Anil Garg',CURRENT_TIMESTAMP , 'ADMIN',6,1,'Y');
--INSERT INTO USERDATA( USER_NAME, USER_LASTUPDATED, USER_LASTUPDATEDBY ) VALUES ('Himanshu Sharma',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO USERDATA( USER_NAME, USER_LASTUPDATED, USER_LASTUPDATEDBY ) VALUES ('Deepak Singh',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO USERDATA( USER_NAME, USER_LASTUPDATED, USER_LASTUPDATEDBY ) VALUES ('Sidhant',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO USERDATA( USER_NAME, USER_LASTUPDATED, USER_LASTUPDATEDBY ) VALUES ('Prashant Srivastav',CURRENT_TIMESTAMP , 'ADMIN');


CREATE TABLE EXCEPTIONTYPES
( 
EXCP_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
EXCP_EXCEPTIONNAME VARCHAR(25),
EXCP_CODE VARCHAR(2),
EXCP_LASTUPDATED TIMESTAMP,
EXCP_LASTUPDATEDBY VARCHAR(20)
);
--grant ALL PRIVILEGES on EXCEPTIONTYPES to SHIFT101;
--INSERT INTO EXCEPTIONTYPES( EXCP_EXCEPTIONNAME,EXCP_CODE, EXCP_LASTUPDATED, EXCP_LASTUPDATEDBY ) VALUES ('Week-Off','WO',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO EXCEPTIONTYPES( EXCP_EXCEPTIONNAME,EXCP_CODE, EXCP_LASTUPDATED, EXCP_LASTUPDATEDBY ) VALUES ('Planned Leave','PL',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO EXCEPTIONTYPES( EXCP_EXCEPTIONNAME,EXCP_CODE, EXCP_LASTUPDATED, EXCP_LASTUPDATEDBY ) VALUES ('Unplanned Leave','UL',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO EXCEPTIONTYPES( EXCP_EXCEPTIONNAME,EXCP_CODE, EXCP_LASTUPDATED, EXCP_LASTUPDATEDBY ) VALUES ('Special Leave','SL',CURRENT_TIMESTAMP , 'ADMIN');
--INSERT INTO EXCEPTIONTYPES( EXCP_EXCEPTIONNAME,EXCP_CODE, EXCP_LASTUPDATED, EXCP_LASTUPDATEDBY ) VALUES ('Weekday','WD',CURRENT_TIMESTAMP , 'ADMIN');


CREATE TABLE SHIFTDATA
( 
DATA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
DATA_CALENDAR_ID INTEGER,
DATA_SHIFT_ID INTEGER,
DATA_EXCEPTION_ID INTEGER,
DATA_USER_ID INTEGER,
DATA_DATES VARCHAR(100),
DATA_LASTUPDATED TIMESTAMP,
DATA_LASTUPDATEDBY VARCHAR(20)
);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_SHIFT_ID) REFERENCES PUBLIC.SHIFTS(SHIFT_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_CALENDAR_ID) REFERENCES PUBLIC.CALENDAR(CAL_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_EXCEPTION_ID) REFERENCES PUBLIC.EXCEPTIONTYPES(EXCP_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_USER_ID) REFERENCES PUBLIC.USERDATA(USER_ID);

CREATE TABLE SHIFTDATA_PLANNED
( 
DATA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
DATA_CALENDAR_ID INTEGER,
DATA_SHIFT_ID INTEGER,
DATA_EXCEPTION_ID INTEGER,
DATA_USER_ID INTEGER,
DATA_DATES VARCHAR(100),
DATA_LASTUPDATED TIMESTAMP,
DATA_LASTUPDATEDBY VARCHAR(20)
);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_SHIFT_ID) REFERENCES PUBLIC.SHIFTS(SHIFT_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_CALENDAR_ID) REFERENCES PUBLIC.CALENDAR(CAL_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_EXCEPTION_ID) REFERENCES PUBLIC.EXCEPTIONTYPES(EXCP_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_USER_ID) REFERENCES PUBLIC.USERDATA(USER_ID);
--grant ALL PRIVILEGES on SHIFTDATA to SHIFT101;

CREATE TABLE SHIFTDATA_ACTUAL
( 
DATA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
DATA_CALENDAR_ID INTEGER,
DATA_SHIFT_ID INTEGER,
DATA_EXCEPTION_ID INTEGER,
DATA_USER_ID INTEGER,
DATA_DATES VARCHAR(100),
DATA_LASTUPDATED TIMESTAMP,
DATA_LASTUPDATEDBY VARCHAR(20)
);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_SHIFT_ID) REFERENCES PUBLIC.SHIFTS(SHIFT_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_CALENDAR_ID) REFERENCES PUBLIC.CALENDAR(CAL_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_EXCEPTION_ID) REFERENCES PUBLIC.EXCEPTIONTYPES(EXCP_ID);
ALTER TABLE PUBLIC.SHIFTDATA ADD FOREIGN KEY (DATA_USER_ID) REFERENCES PUBLIC.USERDATA(USER_ID);

/**
INSERT INTO "PUBLIC"."CALENDAR"
( "CAL_MONTH", "CAL_YEAR", "CAL_LASTUPDATED", "CAL_LASTUPDATEDBY" )
VALUES (1 , 2020, sysdate, 'ADMIN')

INSERT INTO "PUBLIC"."SHIFTDATA"
(  "DATA_CALENDAR_ID", "DATA_SHIFT_ID", "DATA_EXCEPTION_ID", "DATA_USER_ID", "DATA_DATES", "DATA_LASTUPDATED", "DATA_LASTUPDATEDBY" )
VALUES (0 ,0 ,0 ,0 , '4,5,11,12,18,19,25,26',current_timestamp , 'ADMIN');
INSERT INTO "PUBLIC"."SHIFTDATA"
(  "DATA_CALENDAR_ID", "DATA_SHIFT_ID", "DATA_EXCEPTION_ID", "DATA_USER_ID", "DATA_DATES", "DATA_LASTUPDATED", "DATA_LASTUPDATEDBY" )
VALUES (0 ,0 ,1 ,0 , '14,24',current_timestamp , 'ADMIN');
INSERT INTO "PUBLIC"."SHIFTDATA"
(  "DATA_CALENDAR_ID", "DATA_SHIFT_ID", "DATA_EXCEPTION_ID", "DATA_USER_ID", "DATA_DATES", "DATA_LASTUPDATED", "DATA_LASTUPDATEDBY" )
VALUES (0 ,1 ,0 ,1 , '6,7,13,14,20,21,27,28',current_timestamp , 'ADMIN');
INSERT INTO "PUBLIC"."SHIFTDATA"
(  "DATA_CALENDAR_ID", "DATA_SHIFT_ID", "DATA_EXCEPTION_ID", "DATA_USER_ID", "DATA_DATES", "DATA_LASTUPDATED", "DATA_LASTUPDATEDBY" )
VALUES (0 ,1 ,2 ,1 , '29,30',current_timestamp , 'ADMIN');


*/

/**
-----OUTDATED----
select cal.month,cal.year,data.lastupdated,data.lastupdatedby,exp.id exception_id,
GROUP_CONCAT(date) exceptions,
user.name,user.id USER_ID,
exp.exceptionname,shift.shiftname,shift.id SHIFT_ID,
shift.shiftstart,shift.shiftend,shift.timezone
from calendar cal
join shiftdata data on calendar_id=cal.id
join userdata user on user.id=data.user_id
join shifts shift on shift.id=data.shift_id
join EXCEPTIONDATA edata on edata.shift_id=data.id
join exceptiontypes exp on exp.id=edata.exception_id
where cal.month=12 and cal.year=2019
group by cal.month,cal.year,user.name,
exp.exceptionname,shift.shiftname,shift.shiftstart,shift.shiftend,shift.timezone,data.lastupdated,data.lastupdatedby,user.id,shift.id,exp.id

-----NEW STRUCTURE-----
select cal_month,cal_year,SHIFT_ID,shift_name,shift_start,shift_end,shift_timezone,
user_id,user_name,EXCP_EXCEPTIONNAME,
DATA_DATES
from SHIFTDATA
join calendar on cal_id=DATA_CALENDAR_ID
join shifts on shift_id=DATA_SHIFT_ID
join exceptiontypes on excp_id=DATA_EXCEPTION_ID
join userdata on user_id=DATA_USER_ID
where cal_month= 12
and cal_year=2019

-----NEW STRUCTURE PER USER-----
select cal_month,cal_year,SHIFT_ID,shift_name,shift_start,shift_end,shift_timezone,
user_id,user_name,EXCP_EXCEPTIONNAME,
DATA_DATES_PROPOSED
from SHIFTDATA
join calendar on cal_id=DATA_CALENDAR_ID
join shifts on shift_id=DATA_SHIFT_ID
join exceptiontypes on excp_id=DATA_EXCEPTION_ID
join userdata on user_id=DATA_USER_ID
where cal_month= 1
and cal_year=2020
and USER_ID=0

select cal_month,cal_year,SHIFT_ID,shift_name,shift_start,shift_end,shift_timezone,
user_id,user_name,GROUP_CONCAT(excp_code||'~'||DATA_DATES_PROPOSED SEPARATOR '|')
from SHIFTDATA
join calendar on cal_id=DATA_CALENDAR_ID
join shifts on shift_id=DATA_SHIFT_ID
join exceptiontypes on excp_id=DATA_EXCEPTION_ID
join userdata on user_id=DATA_USER_ID
where cal_month= 1
and cal_year=2020
group by cal_month,cal_year,SHIFT_ID,shift_name,shift_start,shift_end,shift_timezone,
user_id,user_name

SELECT CAL_MONTH,CAL_YEAR,SHIFT_ID,SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE, 
USER_ID,USER_NAME,GROUP_CONCAT(EXCP_CODE||'~'||DATA_DATES SEPARATOR '-') DATES,'A' TYPE_OF_DATA 
FROM SHIFTDATA_ACTUAL 
JOIN CALENDAR ON CAL_ID=DATA_CALENDAR_ID 
JOIN SHIFTS ON SHIFT_ID=DATA_SHIFT_ID 
JOIN EXCEPTIONTYPES ON EXCP_ID=DATA_EXCEPTION_ID 
JOIN USERDATA ON USER_ID=DATA_USER_ID 
WHERE CAL_MONTH= 1
AND CAL_YEAR=2020
group by 
CAL_MONTH,CAL_YEAR,SHIFT_ID,SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE, 
USER_ID,USER_NAME,TYPE_OF_DATA
UNION
SELECT CAL_MONTH,CAL_YEAR,SHIFT_ID,SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE, 
USER_ID,USER_NAME,GROUP_CONCAT(EXCP_CODE||'~'||DATA_DATES SEPARATOR '-') DATES,'P' TYPE_OF_DATA 
FROM SHIFTDATA_PLANNED 
JOIN CALENDAR ON CAL_ID=DATA_CALENDAR_ID 
JOIN SHIFTS ON SHIFT_ID=DATA_SHIFT_ID 
JOIN EXCEPTIONTYPES ON EXCP_ID=DATA_EXCEPTION_ID 
JOIN USERDATA ON USER_ID=DATA_USER_ID 
WHERE CAL_MONTH= 1
AND CAL_YEAR=2020
group by 
CAL_MONTH,CAL_YEAR,SHIFT_ID,SHIFT_NAME,SHIFT_START,SHIFT_END,SHIFT_TIMEZONE, 
USER_ID,USER_NAME,TYPE_OF_DATA
order by USER_NAME,TYPE_OF_DATA DESC


select distinct att_emp_id,date,att_punchtime,user_name ,att_date,user_id,att_calendar_id,cal_id,cal_month, cal_year
from  userdata 
join (select att_emp_id,att_date date,att_punchtime,att_calendar_id,CONVERT(extract (DAY from ATT_DATE),SQL_VARCHAR) att_date from attendance) on user_emp_id=att_emp_id
join calendar on cal_id=att_calendar_id
left join (select distinct data_user_id,CONVERT((a.dates),SQL_VARCHAR) act_date,data_calendar_id,cal_month,cal_year 
from 
shiftdata_actual
, calendar
, unnest(REGEXP_SUBSTRING_ARRAY(data_dates, '\d+')) a(dates) 
where cal_id=data_calendar_id
) data on data.data_user_id=user_id and att_date=act_date 
where act_date is null 
and cal_month=3 and cal_year=2020 
and att_punchtime < (select stat_value from static_data where stat_name='SHIFT_MIN_THRESHOLD') 
order by att_emp_id,date


MERGE INTO attendance  USING (VALUES('2020-03-23', 101990,1,CURRENT_DATE,'ADMIN',3)) 
AS vals(a,b,c,d,e,f) ON attendance.att_date = vals.a and attendance.att_emp_id=vals.b 
WHEN MATCHED THEN UPDATE SET attendance.att_punchtime = vals.c,attendance.ATT_LASTUPDATED=vals.d, 
attendance.ATT_LASTUPDATEDBY=vals.e,attendance.ATT_CALENDAR_ID=vals.f 
WHEN NOT MATCHED THEN INSERT(ATT_DATE,ATT_EMP_ID,ATT_PUNCHTIME,ATT_CALENDAR_ID,ATT_LASTUPDATED,ATT_LASTUPDATEDBY) 
VALUES (vals.a,vals.b,vals.c,vals.d,vals.e,vals.f)

**/
